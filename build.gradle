/*
 * Copyright (c) 2007-2013 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: 'etc/version.gradle'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

ext.cascadingVersion = '2.2.0-+'
ext.hadoopVersion = '1.0.4'

// set property to use locally installed cascading builds
// otherwise wip releases will be pulled from conjars
if( System.properties[ 'pattern.release.local' ] )
  cascadingVersion = '2.2.0-wip-dev'

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
  }
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  // pattern is a sub-project of cascading
  // project name is set in settings.gradle
  group = 'cascading'
  version = releaseVersion

  apply from: "${rootDir}/etc/includes.gradle"

  configurations {
    testArtifacts {
      extendsFrom testRuntime
    }
  }

  repositories {
    mavenLocal()
    mavenCentral()
    mavenRepo name: 'conjars', url: 'http://conjars.org/repo/'
  }

  task sourcesJar( type: Jar, dependsOn: classes ) {
    from sourceSets.main.allSource
    classifier = 'sources'
  }

  task javadocJar( type: Jar, dependsOn: javadoc ) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  task testsJar( type: Jar, dependsOn: testClasses ) {
    from sourceSets.test.output
    classifier = 'tests'
  }

  task testSourcesJar( type: Jar, dependsOn: classes ) {
    from sourceSets.test.allSource
    classifier = 'test-sources'
  }

  artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
    archives testsJar
    archives testSourcesJar
    testArtifacts testsJar
    testArtifacts testSourcesJar
  }

  dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
  }

  uploadArchives {

    repositories.mavenDeployer {
      configuration = configurations.archives

      repository( url: repoUrl ) {
        authentication( userName: repoUserName, password: repoPassword )
      }

      pom.project {
        description 'Pattern is MachineLearning for Cascading on Apache Hadoop'
        inceptionYear '2012'
        url 'http://cascading.org/pattern/'
        scm {
          url 'https://github.com/Cascading/pattern.git'
        }
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }
      }
    }
  }

}
