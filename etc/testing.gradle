/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rootProject.ext.testRoots = []

project.ext.setTestingProperties = {

  if( !System.properties[ 'test.cluster.enabled' ] )
    System.properties[ 'test.cluster.enabled' ] = 'false'

  // hadoop hard codes 'build/test' into its test harness, so might as well play along
  System.properties[ 'test.data.path' ] = new String( "${projectDir}/../pattern-pmml/src/test/resources/pmml/" )
  System.properties[ 'test.output.root' ] = new String( "${buildDir}/test/output/" )

  System.properties
}

test {
  jvmArgs '-Xmx756m'

  enableAssertions = false

  systemProperties = setTestingProperties()
}

task platformTest( type: Test, dependsOn: test ) {

  forkEvery = 1 // static fields on the platform test get munged otherwise

  if( System.properties[ 'platformTest.single' ] ) // test a single class from the command line
    include "**/${System.properties[ 'platformTest.single' ]}.class"
  else
    include '**/*PlatformTest.class'

  jvmArgs '-Xmx756m'

  enableAssertions = false

  systemProperties = setTestingProperties()

  setTestClassesDir( file( project( ':pattern-pmml' ).sourceSets.test.output.classesDir ) )

  // not called when disabled
  doFirst() {

    rootProject.ext.testRoots << systemProperties[ 'test.output.root' ]
  }
}

check {
  dependsOn << platformTest
}